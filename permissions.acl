/* TOP to BOTTOM read order */

//---------/* BATCHES */

rule denyL_CE_CREATEbatches { // n√£o funciona ainda
  description: "Workers CAN'T UD Batches"
  participant(p): "org.doptrace.Worker"
  operation: CREATE
  resource(r): "org.doptrace.Batch"
  condition: (p.operator == Logistics)
  action: DENY
}

rule denyWorkerUDbatches {
  description: "Workers CAN'T UD Batches"
  participant: "org.doptrace.Worker"
  operation: UPDATE, DELETE
  resource: "org.doptrace.Batch"
  action: DENY
}

//---------/* EVENTS */

//---------/* OPERATORS */
rule denyWorkerCUDoperators {
  description: "Worker CAN'T CUD Operators"
  participant: "org.doptrace.Worker"
  operation: CREATE, UPDATE, DELETE
  resource: "org.doptrace.Operator"
  action: DENY
}

//---------/* USERS */
rule denyCRUDWorkersWithNonExistingOperators {
  description: "Users CAN'T CRUD Workers with a non-existing Operator Id"
  participant(p): "org.doptrace.User"
  operation: CREATE
  resource(r): "org.doptrace.Worker"
  condition: (r.operator.isResource() == false)
  action: DENY
}

rule denyWorkerAdminCUDworkerAdmins  {
  description: "WorkerAdmins CAN'T CUD other WorkerAdmins"
  participant: "org.doptrace.WorkerAdmin"
  operation: CREATE, UPDATE, DELETE
  resource: "org.doptrace.WorkerAdmin"
  action: DENY
}

rule allowWorkerAdminREADworkerAdmin  {
  description: "WorkerAdmins CAN READ other WorkerAdmins"
  participant: "org.doptrace.WorkerAdmin"
  operation: READ
  resource: "org.doptrace.WorkerAdmin"
  action: ALLOW
}

rule allowWorkerAdminCUDworkerOfSameOperatorID{
  description: "WorkerAdmins CAN ONLY CUD Workers of same Operator ID"
  participant(p): "org.doptrace.WorkerAdmin"
  operation: CREATE, UPDATE, DELETE
  resource(v): "org.doptrace.Worker"
  condition: (p.operator.getIdentifier() == v.operator.getIdentifier())
  action: ALLOW
}

rule denyWorkerREADworkerAdmin{
  description: "Workers CAN'T READ WorkerAdmins"
  participant: "org.doptrace.Worker"
  operation: READ
  resource: "org.doptrace.WorkerAdmin"
  action: DENY
}

rule allowWorkerREADworker{
  description: "Workers CAN ONLY READ Workers"
  participant: "org.doptrace.Worker"
  operation: READ
  resource: "org.doptrace.Worker"
  action: ALLOW
}

rule denyWorkerCRUDusers {
  description: "Workers CAN'T CRUD Users"
  participant: "org.doptrace.Worker"
  operation: ALL
  resource: "org.doptrace.User"
  action: DENY
}

//---------/* ACL DEFAULT RULES */
rule Default {
  description: "Allow all participants access to all resources"
  participant: "ANY"
  operation: ALL
  resource: "org.doptrace.*"
  action: ALLOW
}

rule SystemACL {
  description: "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
  description: "Grant business network administrators full access to user resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "**"
  action: ALLOW
}

rule NetworkAdminSystem {
  description: "Grant business network administrators full access to system resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}