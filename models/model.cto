/**
 * DOP Traceability network definition.
 */

namespace org.doptrace

//---------/* ENUMS */
enum Units{
    o KG
    o L
    o UNIT
}

enum State{
    o HARVESTED
    o IN_TRANSIT
    o REGISTERED
    o CERTIFIED
    o STORED
    o SOLD
}

//---------/* CONCEPTS */
concept Address{
  o String street
  o String zip regex=/^[0-9]{4}-[0-9]{3}/
  o String city
  o String country
}

concept Contacts{
  o String phoneNumber
  o String email
  o String phoneNumber2 optional
}


//---------/* PARTICIPANTS */
abstract participant User identified by username{
  o String username
  o String firstname
  o String lastname
  o String password
  o Contacts contacts
}

participant SysAdmin extends User{
}

participant Worker extends User{
  --> Asset operator
}

participant WorkerAdmin extends Worker{
}

//---------/* OPERATORS */
abstract asset ValueChainOperator identified by id{
  o String id
  o String name
  o String description
  o Address address
  o Contacts contacts
}

asset Producer extends ValueChainOperator{
}

asset Industry_Retailer extends ValueChainOperator{
}

asset LogisticsCompany extends ValueChainOperator{
}

asset CertificationEntity extends ValueChainOperator{
}

//---------/* EVENTS */
abstract asset Events identified by id{
    o String id
    o String description optional // certos eventos que não precisam
    o Double latitude optional // certos eventos que não precisam
    o Double longitude optional // certos eventos que não precisam
    o DateTime timestamp
    o Units unit
    o Double amount default=0.00 range=[0.00,]
    --> Worker worker
    --> Batch batch
}

asset Harvest extends Events{
    --> Producer producer
}

asset BatchRegistration extends Events{
    --> Industry_Retailer industry_retailer
}

asset Transformation extends Events{
    o String[] processes optional // processamento secreto da industria
    --> Industry_Retailer industry_retailer
}

asset Sale extends Events{
    o Double salePrice default=0.00 range=[0.00,]
    --> Industry_Retailer industry_retailer
}

asset Storage extends Events{
    --> Industry_Retailer industry_retailer
}

asset Transport extends Events{
    --> LogisticsCompany logisticsCompany
    o Address destinationAddress
}

asset BatchCertification extends Events{
    --> CertificationEntity certificationEntity
    --> PDOCertificate pdoCertificate
    o Boolean certification
    o String[] rejectionJustifications optional // não é necessario quando o lote é certificado
}

//---------/* BATCH */ //verificar situação de evento criar novo lote
asset Batch identified by id {
    o String id
    o Double amount default=0.00 range=[0.00,]
    o Units unit
    o DateTime creationDate optional
    o State state
  	--> Asset issuer
  	--> Asset owner 
    o Asset[] previousOwners
    --> PDOCertificate pdoProduct optional
}

//---------/* PDO CERTIFICATE */
asset PDOCertificate identified by id{
    o String id
    o String productName
    o String[] regions
    o String[] requirements
}

transaction setupDemo {
}

//Troca de pool
  
abstract transaction moveBatch{
  --> Batch batch
}
  
transaction A_producerToLogistics extends moveBatch{
  --> Producer issuer
  --> LogisticsCompany newOwner
}
  
transaction B_logisticsToIndustry extends moveBatch{
  --> LogisticsCompany issuer
  --> Industry_Retailer newOwner
}
  
transaction D_industryToEntity extends moveBatch{
  --> Industry_Retailer issuer
  --> CertificationEntity newOwner
}

transaction E_EntityToIndustry extends moveBatch{
  --> CertificationEntity issuer
  --> Industry_Retailer newOwner
}
  
transaction F_EntityToLogistics extends moveBatch{
  --> CertificationEntity issuer
  --> LogisticsCompany newOwner
}  
  
  
transaction C_batchRegistration {
  --> Batch batch
  --> Industry_Retailer retailer
  o Double  numberOfBatchs
  o Double newAmount
  o Units newUnit
}
  
transaction query { 
}