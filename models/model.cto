/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.doptrace

//---------/* ENUMS */
enum Units{
    o KG
    o L
    o UNIT
}

enum State{
    o REGISTERED
    o IN_TRANSIT
    o TRANSFORMED
    o CERTIFIED
    o STORED
    o SOLD
    o DISCARDED
}

//---------/* CONCEPTS */
concept Address{
  o String street
  o String zip
  o String city
  o String country
}

concept Contacts{
  o String phoneNumber
  o String email // adicionar regex @
}

//---------/* PARTICIPANTS */
abstract participant User identified by username{
  o String username
  o String firstname
  o String lastname
  o String password
  o Contacts contacts
}

participant SysAdmin extends User{
}

participant Worker extends User{
  --> Operator operator // operator para qual o worker trabalha
}

participant WorkerAdmin extends Worker{
}

//---------/* OPERATORS */
abstract asset Operator identified by id{
  o String id
  o String name
  o String description
  o Address address
  o Contacts contacts
}

asset Producer extends Operator{
}

asset Industry_Retailer extends Operator{
}

asset Logistics extends Operator{
}

asset CertificationEntity extends Operator{
}

//---------/* EVENTS */
abstract asset Events identified by id{
    o String id
    o String description optional
    o Double latitude optional // certos eventos não necessitam de registo de latLong
    o Double longitude optional
    o DateTime dateTime
    --> Worker worker // worker associado ao evento
    // Operators associados a cada evento estão definidos especificamente nas extensões de Events em baixo
}

asset ProductRegistration extends Events{
    o Batch newBatch // produtor cria e regista batch
    --> Producer producer
}

asset QualityAssessment extends Events{
    o Double amountDowned default = 0.00 range=[0.00,] 
    o Batch newBatch optional // em casos em que Industry_Retailer seja diferente que a última QualityAssessment do assessedBatch E/OU amountDowned!=0, newBatch não é optional e terá as mesmas propriedades de assessedBatch (lógica terá de verificar que, caso amountDowned!=0, que newBatch.amount = assessedBatch.amount - amountDowned)
    --> Industry_Retailer industry_retailer
    --> Batch assessedBatch // batch que foi avaliado
}

asset Transformation extends Events{
    o Batch[] newBatches // pode criar 1 ou vários batches de com quantidades alteradas que foram usadas na transformação
    o String[] processes optional // indústria pode não querer revelar o processo de transformação
    --> Industry_Retailer industry_retailer
    --> Batch[] usedBatches // batches usados na transformação
}

asset Storage extends Events{
    --> Industry_Retailer industry_retailer
    --> Batch[] storedBatches // batches armazenados neste evento
}

asset Sale extends Events{
    o Double salePrice range=[0.00,]
    o Batch[] newBatches // batch(es) pode(m) ser vendido(s) na totalidade ou em quantidades diferentes (lógica terá de verificar se somatório de soldBatches.amount == newBatches.amount, tal como identificar corretamente os issuers e owners de cada batch)
    --> Industry_Retailer seller // vendedor
    --> Industry_Retailer buyer // comprador
    --> Batch[] soldBatches // batches usados na venda
}

asset Transport extends Events{
    --> Logistics logistics
    --> Industry_Retailer destinationAddress // local de destino será sempre um operator industry_retailer
    --> Batch[] transportedBatches
}

asset Analysis extends Events{
    o Boolean certificated default = false
    --> CertificationEntity certificationEntity
    --> Batch batch // só é possível analisar 1 batch de cada vez
}

asset Discard extends Events{
    o String motive
    --> Industry_Retailer industry_retailer // apenas industry_retailer pode descartar batches
    --> Batch[] discardedBatches // podemos descartar vários baixos no mesmo evento desde que tenham o mesmo motivo
}

/*--------- EVENTS 
event checkLocation{
  	o Double[2] latLong ?
    o Double latitude
    o Double longitude
} */

//---------/* BATCH */
asset Batch identified by id {
    o String id
    o Double amount range=[0.00,]
    o Units unit
    o DateTime creationDate
    o DateTime expirationDate
    o State state
    o Boolean certificated default = false
    --> Events[] previousEvents optional
    --> Operator previousOperator optional
    --> Operator currentOperator
    --> Product product
}

//---------/* PDO PRODUCT */
asset Product identified by id{
    o String id
    o String name
    o String description
}

asset DOP_Product extends Product{
    o String[] regions
    o String[] requirements
}

//---------/* TRANSACTIONS */
transaction setupDemo {
}

// Troca de pool
abstract transaction moveBatch{
  --> Batch[] batches
}
  
transaction A_producerToLogistics extends moveBatch{
  --> Producer issuer
  --> Logistics newOwner
}

transaction B_producerToIndustry extends moveBatch{
  --> Producer issuer
  --> Industry_Retailer newOwner
}
  
transaction C_logisticsToIndustry extends moveBatch{
  --> Logistics issuer
  --> Industry_Retailer newOwner
}

transaction D_industryToEntity extends moveBatch{
  --> Industry_Retailer issuer
  --> CertificationEntity newOwner
}

transaction E_industryToLogistics extends moveBatch{
  --> Industry_Retailer issuer
  --> Logistics newOwner
}

transaction F_EntityToIndustry extends moveBatch{
  --> CertificationEntity issuer
  --> Industry_Retailer newOwner
}
  
transaction G_EntityToLogistics extends moveBatch{
  --> CertificationEntity issuer
  --> Logistics newOwner
}  
  
transaction query { 
}